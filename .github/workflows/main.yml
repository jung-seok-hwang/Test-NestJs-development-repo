name: Deploy to Amazon ECR and EC2

on:
  push:
    branches:
      - '*'  # 모든 브랜치에 대해 실행

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-northeast-2

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}
        ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

    - name: Create docker-compose.yml
      run: |
        echo "version: '3'
        services:
          nest-app:
            image: ${{ secrets.ECR_REGISTRY }}/${{ secrets.ECR_REPOSITORY }}:${IMAGE_TAG}
            ports:
              - '3000:3000'
            restart: always" > docker-compose.yml

    - name: Deploy to EC2
      env:
        EC2_SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
        EC2_HOST: ${{ secrets.EC2_HOST }}
        EC2_USER: ec2-user
        ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}
        ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        echo "$EC2_SSH_PRIVATE_KEY" > private_key
        chmod 600 private_key
        scp -o StrictHostKeyChecking=no -i private_key docker-compose.yml ${EC2_USER}@${EC2_HOST}:~/docker-compose.yml
        ssh -o StrictHostKeyChecking=no -i private_key ${EC2_USER}@${EC2_HOST} '
          sudo yum update -y
          sudo amazon-linux-extras install docker -y
          sudo service docker start
          sudo usermod -a -G docker ec2-user
          sudo chkconfig docker on
          sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          aws ecr get-login-password --region ap-northeast-2 | docker login --username AWS --password-stdin ${{ secrets.ECR_REGISTRY }}
          echo "IMAGE_TAG=${{ github.sha }}" > .env
          docker-compose down
          docker-compose up -d
          docker image prune -f
          # 로그 확인을 통해 실행 여부 확인
          docker-compose logs -f
          # 서비스 상태 확인
          docker ps
          sudo systemctl enable docker
        '
